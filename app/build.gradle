plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

apply from: "../dependencies.gradle"

android {
    compileSdk 31

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.example.marvelapiapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation libraries.androidXCore
    implementation libraries.appCompat
    implementation libraries.material
    implementation libraries.constraintLayout

    implementation project(path: ':data')
    implementation project(path: ':domain')

    implementation libraries.fragment
    implementation libraries.viewmodel
    implementation libraries.swipeRefreshLayout
    implementation (libraries.picasso) {
        exclude group: 'com.android.support'
        exclude module: ['exifinterface', 'support-annotations']
    }

    // Injection
    implementation libraries.hilt
    kapt libraries.hiltCompiler

    // Room
    implementation libraries.gson
    implementation libraries.room
    implementation libraries.roomKtx
    kapt libraries.roomCompiler

    // Retrofit
    implementation libraries.gson
    implementation libraries.retrofit
    implementation libraries.retrofitGson
    implementation libraries.okHttpInterceptor

    // Testing
    testImplementation testing.junit
    testImplementation testing.mockk
}

kapt {
    correctErrorTypes true
}
